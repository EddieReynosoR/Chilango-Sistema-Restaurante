<Window x:Class="SistemaRestaurante.Views.Dialogs.OrdenMesaWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:local="clr-namespace:SistemaRestaurante.Views.Dialogs"
        mc:Ignorable="d"
        Title="OrdenMesa" Height="1000" Width="800"
        WindowStyle="None"
        AllowsTransparency="True"
        WindowStartupLocation="CenterScreen"
        Background="Transparent"
        UseLayoutRounding="True"
        SnapsToDevicePixels="True">
    <Window.Resources>
        <Style x:Key="HoverButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
  Background="{TemplateBinding Background}"
  CornerRadius="5"
  SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center"
              VerticalAlignment="Center"
              RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border"
      Property="Background"
      Value="{StaticResource PrimaryDarkBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border"
      Property="Background"
      Value="{StaticResource PrimaryDarkBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border"
      Property="Opacity"
      Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="HoverTextBoxStyle" TargetType="TextBox">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Padding" Value="5,2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="border"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          CornerRadius="3"
                          SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost"
                            Padding="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border"
          Property="BorderBrush"
          Value="{StaticResource PrimaryDarkBrush}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="border"
      Property="BorderBrush"
      Value="{StaticResource PrimaryDarkBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border"
      Property="Opacity"
      Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="AddButton" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource PrimaryBrush}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Width" Value="150" />
            <Setter Property="Height" Value="35" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="Margin" Value="0 20 0 0" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="7">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryDarkBrush}" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Border Background="White" Margin="20" CornerRadius="20" Padding="30" Width="600" Height="800">
        <Border.Effect>
            <DropShadowEffect BlurRadius="10" ShadowDepth="3" Opacity="0.5" />
        </Border.Effect>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="30*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="10"/>
                <RowDefinition Height="10*"/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0" Margin="0,0,0,20">
                <TextBlock Text="{Binding TituloOrden}" FontSize="20" FontWeight="Bold" HorizontalAlignment="Center"/>
                <TextBlock Text="Agrega platillos/bebidas a la orden" FontSize="14" Foreground="Gray" HorizontalAlignment="Center"/>
            </StackPanel>

            <StackPanel Grid.Row="1" VerticalAlignment="Top" >
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Platillos/Bebidas" FontWeight="SemiBold" Margin="0 0 265 0" VerticalAlignment="Center" />
                    <Button Grid.Row="0" Style="{StaticResource AddButton}" x:Name="btnAgregarOrden" Width="180" Click="btnAgregarOrden_Click" VerticalAlignment="Center">
                        <StackPanel Orientation="Horizontal">
                            <icon:PackIconMaterial Kind="Plus" VerticalAlignment="Center" Width="11" Height="11" Margin="0 1 8 0" />
                            <TextBlock Text="Agregar platillo/bebida" />
                        </StackPanel>
                    </Button>
                </StackPanel>
                <DataGrid Style="{DynamicResource DataGridStyle1}" CellStyle="{DynamicResource DataGridCellStyle1}" ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle1}" RowStyle="{DynamicResource DataGridRowStyle1}" x:Name="dgProductos" ItemsSource="{Binding Platillos}">
                    <DataGrid.Columns>

                        <DataGridTextColumn Header="Nombre" Binding="{Binding Platillo.Nombre}" IsReadOnly="True" Width="33*" />
                        <DataGridTextColumn Header="Precio" Binding="{Binding Platillo.Precio}" IsReadOnly="True" Width="33*" />
                        <DataGridTextColumn Header="Cantidad" Binding="{Binding Cantidad}" IsReadOnly="True" Width="33*" />
                        <DataGridTextColumn Header="Area" Binding="{Binding Platillo.Area}" IsReadOnly="True" Width="33*" />

                        <DataGridTemplateColumn Header="" IsReadOnly="True" Width="33*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Button Tag="{Binding}" x:Name="btnAumentar" Style="{StaticResource GridEditButton}" Click="btnAumentar_Click">
                                            <icon:PackIconMaterial Kind="Plus" Style="{StaticResource GridButtonIcon}" />
                                        </Button>
                                        <Button Tag="{Binding}" x:Name="btnDisminuir" Margin="5 0 0 0" Style="{StaticResource GridDeleteButton}" Click="btnDisminuir_Click">
                                            <icon:PackIconMaterial Kind="Minus" Style="{StaticResource GridButtonIcon}" />
                                        </Button>
                                        <Button Tag="{Binding}" x:Name="btnEliminar" Margin="5 0 0 0" Style="{StaticResource GridDeleteButton}" Click="btnEliminar_Click">
                                            <icon:PackIconMaterial Kind="DeleteOutline" Style="{StaticResource GridButtonIcon}" />
                                        </Button>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                    </DataGrid.Columns>
                </DataGrid>
            </StackPanel>

            <StackPanel Grid.Row="3" Margin="0 20 0 20" Orientation="Horizontal" HorizontalAlignment="Center">
                <Button Content="Cancelar" x:Name="btnCancelar" Click="btnCancelar_Click"
                    Background="LightGray" Foreground="Black"
                    FontWeight="Bold" Height="40" Width="120" BorderThickness="0">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource HoverButtonStyle}">
                            <Setter Property="Background" Value="LightGray"/>
                            <Setter Property="Margin" Value="0 0 10 0"/>
                            <Style.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="DarkGray"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Content="Guardar" x:Name="btnGuardar" Click="btnGuardar_Click"
                    Background="{StaticResource PrimaryBrush}" Foreground="White"
                    FontWeight="Bold" Height="40" Width="120" BorderThickness="0"
                    Style="{StaticResource HoverButtonStyle}" Margin="0 0 10 0"/>
            </StackPanel>
            
            <Separator Height="1" Grid.Row="4" Background="#DAE2EA" Margin=" 0 5 0 5" />
            
            <StackPanel Grid.Row="5" Margin="0,20,0,0" Orientation="Horizontal" HorizontalAlignment="Center" Height="100">
                <Button Content="Cancelar Orden" x:Name="btnCancelarOrden" Click="btnCancelarOrden_Click"
                    Background="LightGray" Foreground="Black"
                    FontWeight="Bold" Height="40" Width="120" BorderThickness="0">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource HoverButtonStyle}">
                            <Setter Property="Background" Value="LightGray"/>
                            <Setter Property="Margin" Value="0 0 10 0"/>
                            <Style.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="DarkGray"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Content="Finalizar Orden" x:Name="btnVenta" Click="btnVenta_Click"
                    Background="{StaticResource PrimaryBrush}" Foreground="White"
                    FontWeight="Bold" Height="40" Width="120" BorderThickness="0"
                    Style="{StaticResource HoverButtonStyle}" Margin="0 0 10 0"/>
            </StackPanel>
        </Grid>
    </Border>
</Window>
